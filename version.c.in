/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is CellMLSimulator.
 *
 * The Initial Developer of the Original Code is
 * David Nickerson <nickerso@users.sourceforge.net>.
 * Portions created by the Initial Developer are Copyright (C) 2007-2008
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
/*
  Make sure this gets recompiled any time anything else gets built so
  the full version information is kept up-to-date
*/
#include <stdlib.h>
#include <stdio.h>

#include "version.h"
#include "utils.h"

/* these get filled in by the build process */
/*SVN_VERSION_STRING*/
/*DATE_STRING*/

/* might use this stuff one day for conditional compilation? */
static char* SundialsVersion = "/*SUNDIALS_VERSION*/";

/* just a counter to keep track of stuff? */
static char* VersionString = "0.1.0";

char* getVersion(const char* tool,const char* toolVersion)
{
  char* string = (char*)NULL;
  string = vstrcat(string,"CellMLSimulator-minimal ",
    VersionString,(char*)NULL);
  if (tool)
  {
    string = vstrcat(string," (",tool,(char*)NULL);
    if (toolVersion) string =
      vstrcat(string," version ",toolVersion,(char*)NULL);
    string = vstrcat(string,")",(char*)NULL);
  }
#ifdef SVN_VERSION_STRING
  string = vstrcat(string," - revision ",SVN_VERSION_STRING,(char*)NULL);
#endif
#ifdef DATE_STRING
  string = vstrcat(string," - ",DATE_STRING,(char*)NULL);
#endif
  return(string);
}

const char const * getSundialsVersion()
{
  return SundialsVersion;
}

