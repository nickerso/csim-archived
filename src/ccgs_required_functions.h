/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is CellMLSimulator.
 *
 * The Initial Developer of the Original Code is
 * David Nickerson <nickerso@users.sourceforge.net>.
 * Portions created by the Initial Developer are Copyright (C) 2007-2008
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
#ifndef _CCGS_REQUIRED_FUNCTIONS_H_
#define _CCGS_REQUIRED_FUNCTIONS_H_

#include <inttypes.h>
#include <stdarg.h>

#ifdef __cplusplus
extern "C"
{
#endif
  /* The functions which may be used by the code generated by the CCGS */
  double factorial(double x);
  double arbitrary_log(double value, double logbase);
  double gcd_pair(double a, double b);
  double lcm_pair(double a, double b);
  double gcd_multi(uint32_t size, ...);
  double lcm_multi(uint32_t size, ...);
  double multi_min(uint32_t size, ...);
  double multi_max(uint32_t size, ...);
  double safe_quotient(double num, double den);
  double safe_remainder(double num, double den);
  double safe_factorof(double num, double den);
  void NR_MINIMISE(double(*func)(double VOI, double *C, double *R, double *S, double *A),
                   double VOI,double *C,double *R,double *S,double *A,double *V);
#ifdef __cplusplus
}
#endif


#endif /* _CCGS_REQUIRED_FUNCTIONS_H_ */
